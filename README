ParkingGuidence
==============

停车诱导算法思想
----------------
* 首先将停车场划分为九个区，统计每个区的已停车数，选出停车最少的区。
* 若这样的区存在多个，则使用dijkstra算法思想，以各个路口作为节点，节
点之间停车数作为边权，找出距离入口最近的区。


情况分类:
1.车场较空时
描述：每个区域不超过15辆车,全停车场不超过135辆
前置条件：车场刚开放
诱导方法： 选择停车数未超过15的最近区域

2.停车均匀分布时
描述：各区域停车数量相近，全车停车在135到320辆之间
前置条件：车辆出出进进，分布较均匀
诱导方法：选择停车数量最少且距离入口最近的区域

3.车场接近饱和时
描述：全车停车数量超过320，只剩下近一个区的空车位
前置条件：停车高峰出现
诱导方法：选择距离最近的停车区域

模块使用说明
------------

该算法维护着一个二维数组parking_map，测试时可使用/data/parking_lots.txt文件
内容对其初始化。其次算法还需要入口位置(A1或A2)，使用
	get_final_stop(start,&stop)
调用该算法，start为入口位置,stop为建议停车区域。

start取值:
0 - A1
1 - A2

stop取值:
0 - A1 
1 - B1
2 - C1
3 - A2
4 - B2
5 - C2
6 - A3
7 - B3
8 - C3

停车场布局示意图
  ------------- A1 ----------- A2 ------------  
 |    ________  |    ________  |    ________  |
 |   |        | |   |        | |   |        | |   
 |   |________| |   |________| |   |________| |   
 |              |              |              |
 B1 ----------- B2 ----------- B3 ----------- B4          
 |    ________  |    ________  |    ________  | 
 |   |        | |   |        | |   |        | |  
 |   |________| |   |________| |   |________| |    
 |   |        | |   |        | |   |        | |  
 |   |________| |   |________| |   |________| |  
 |              |              |              |
 C1 ----------- C2 ----------- C3 ----------- C4          
 |    ________  |    ________  |    ________  |
 |   |        | |   |        | |   |        | |   
 |   |________| |   |________| |   |________| |    
 |   |        | |   |        | |   |        | |  
 |   |________| |   |________| |   |________| |  
 |              |              |              |
 D1 ----------- D2 ----------- D3 ----------- D4          
 |    ________  |    ________  |    ________  |
 |   |        | |   |        | |   |        | |  
 |   |________| |   |________| |   |________| |  
 |              |              |              |
  ------------- E1 ----------- E2 ------------

停车场区域分布示意图
  ------------     ----------     ------------
 |                                            |
 |   ________       ________       ________   |   
 |  |        |     |        |     |        |  |
 |  |        |     |        |     |        |  |
 |  |   A1   |     |   B1   |     |   C1   |  |
 |  |        |     |        |     |        |  |
 |  |________|     |________|     |________|  |
 |                                            |
 |                                            |
 |   ________       ________       ________   |
 |  |        |     |        |     |        |  |
 |  |        |     |        |     |        |  |
 |  |   A2   |     |   B2   |     |   C2   |  |
 |  |        |     |        |     |        |  |
 |  |________|     |________|     |________|  | 
 |                                            |
 |                                            |
 |   ________       ________       ________   |
 |  |        |     |        |     |        |  |
 |  |        |     |        |     |        |  |
 |  |   A3   |     |   B3   |     |   C3   |  |
 |  |        |     |        |     |        |  |
 |  |________|     |________|     |________|  |
 |                                            |
 |                                            |   
  ------------     ----------     ------------
